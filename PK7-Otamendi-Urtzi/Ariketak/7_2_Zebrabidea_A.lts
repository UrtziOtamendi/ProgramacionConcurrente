



//Urtzi Otamendi Etxabe
//2017/11/30

const True = 1
const False = 0
range B = False..True


const N = 3 // kotxe kopurua

const M= 3 // Zain maximoa
range T = 0..N // kotxe kontagailua
range IDK = 1..N
range IDP = 1..N

P = (iritsi->sartu->irten->P).

//op oinezko kopurua pasatzen
//kp kotxe kopurua
//kz kotxeak zain
//oz oinzekoak zain

ZEBRABIDEA = ZEBRABIDEA[0][0][0][0],
ZEBRABIDEA[kp:T][op:T][kz:T][oz:T] =
									( 							   oinezkoa[IDP].iritsi      -> 	ZEBRABIDEA[kp][op][kz][oz+1]
									|when (kp==0 && kz<M) 	  	 oinezkoa[IDP].sartu 	  -> 	ZEBRABIDEA[kp][op+1][kz][oz-1]
									|								oinezkoa[IDP].irten 	  -> 	ZEBRABIDEA[kp][op-1][kz][oz]
									|			  				  kotxea[IDK].iritsi        ->	 ZEBRABIDEA[kp][op][kz+1][oz]
									|when (op==0 && oz==0 )   kotxea[IDK].sartu		 ->	 ZEBRABIDEA[kp+1][op][kz-1][oz]
									|		   					 kotxea[IDK].irten 	    -> 	ZEBRABIDEA[kp-1][op][kz][oz]
									).




||BIDEA= (oinezkoa[IDP]:P || kotxea[IDK]:P || ZEBRABIDEA).

//Elkar blokeaketa


//Trace to terminal set of states:
//	oinezkoa.1.iritsi
//	oinezkoa.2.iritsi
//	oinezkoa.3.iritsi
//	kotxea.1.iritsi
//	kotxea.2.iritsi
//	kotxea.3.iritsi

// Guztiak batera zebrabidera iritsiz gero, oinezkoek ezingo dute pasa, zain dauden kotxe kopuruak baimendutakoa gainditzen duelako.
// Kotxeek berriz, oinezkoak zain daudenez, ezin izango dute pasa


