
// Urtzi Otamendi Etxabe
// 2017/12/28

//Elkar blokeaketa dago
//Trace to DEADLOCK:
//	l.0.sartu
//	l.1.sartu
//	l.2.sartu
//	l.3.sartu
//	l.4.sartu

//Hau ez gertatzeko, lehoiek, sartu baino lehen beraientzat zatirik geratzen den begiratu beharko dute.
//Horretarako barruan jateko zain daudenen kontagailu bat ezarriko da. Zati gehiago ez dagoenean ez zaie 
//lehoiei sartzen utziko. Atea itxiko zaie, eta ezingo dute sartu; atera bai.


// Ez da inongo bizitasun propietaterik hautsi nire soluzioan. Beraz, inongo arazorik ez dagoela
//ondoriozta dezaket.


const Max=10  // zati kop
range PR=0..Max //zati rangoa

const LKop=5 // Lehoi kop
range LR=0..LKop
range LzR=0..(LKop-1)

const True=1
const False=0
range Bool=False..True //Bool 


LEHOIA = ( sartu-> jan -> irten -> LEHOIA).
ZAINDARIA  =( sartu -> bete -> irten -> ZAINDARIA).



//p: zati kopurua
//a: atearen egoera False=Irekita
//k: lehoi kop
//jz: jateko zain dauden kop
JANGELA = JANGELA[0][0][0][True],
JANGELA[p:PR][k:LR][jz:LR][a:Bool]=  (when (a==False )		l[LzR].sartu	-> if(p==(jz+1)) then JANGELA[p][k+1][jz+1][True] else JANGELA[p][k+1][jz+1][a] 
									 |when (p>0)			l[LzR].jan		-> JANGELA[p-1][k][jz-1][a]
								 	 |						l[LzR].irten	-> JANGELA[p][k-1][jz][a]
							 		 |when (k==0 && p==0)	z.sartu			-> JANGELA[p][k][jz][True]	
									 |						z.bete			-> JANGELA[Max][k][jz][a]
									 |						z.irten			-> JANGELA[p][k][jz][False]
									 ).
					


||ZOO = (l[LzR]:LEHOIA||z:ZAINDARIA||JANGELA)  .

||ZOOMAX = (ZOO) << {l[LzR].sartu} .